Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIFFER
    MULTIPLY
    PLUS

Grammar

Rule 0     S' -> Program
Rule 1     Program -> Statement_list
Rule 2     Statement_list -> Statement END Statement_list
Rule 3     Statement_list -> Statement END
Rule 4     Statement -> SuperType ID EQUAL Expression
Rule 5     Statement -> ID EQUAL Expression
Rule 6     SuperType -> TYPE LPAREN Type RPAREN
Rule 7     SuperType -> ClusterSet
Rule 8     SuperType -> Type
Rule 9     ClusterSet -> TYPE LPAREN TYPE COMMA ClusterSet RPAREN
Rule 10    ClusterSet -> TYPE LPAREN TYPE COMMA TYPE RPAREN
Rule 11    Type -> TYPE
Rule 12    Expression -> GROUP Register_set BY Collection_list
Rule 13    Expression -> USER LPAREN Register_set RPAREN
Rule 14    Expression -> TOWER LPAREN Register_set RPAREN
Rule 15    Expression -> COUNT LPAREN Register_set RPAREN
Rule 16    Expression -> Register_set
Rule 17    Register_set -> ID
Rule 18    Register_set -> ALL
Rule 19    Register_set -> FILTER Register_set BY Predicate_list
Rule 20    Collection_list -> Collection COMMA Collection_list
Rule 21    Collection_list -> Collection
Rule 22    Collection -> ID
Rule 23    Collection -> LBRACE PROV RBRACE
Rule 24    Collection -> LBRACE MUN RBRACE
Rule 25    Predicate_list -> Predicate COMMA Predicate_list
Rule 26    Predicate_list -> Predicate
Rule 27    Predicate -> TIME LPAREN DATE COMMA DATE RPAREN
Rule 28    Predicate -> LOCATION LPAREN STRING RPAREN
Rule 29    Predicate -> ID

Terminals, with rules where they appear

ALL                  : 18
BY                   : 12 19
COMMA                : 9 10 20 25 27
COUNT                : 15
DATE                 : 27 27
DIFFER               : 
END                  : 2 3
EQUAL                : 4 5
FILTER               : 19
GROUP                : 12
ID                   : 4 5 17 22 29
LBRACE               : 23 24
LOCATION             : 28
LPAREN               : 6 9 10 13 14 15 27 28
MULTIPLY             : 
MUN                  : 24
PLUS                 : 
PROV                 : 23
RBRACE               : 23 24
RPAREN               : 6 9 10 13 14 15 27 28
STRING               : 28
TIME                 : 27
TOWER                : 14
TYPE                 : 6 9 9 10 10 10 11
USER                 : 13
error                : 

Nonterminals, with rules where they appear

ClusterSet           : 7 9
Collection           : 20 21
Collection_list      : 12 20
Expression           : 4 5
Predicate            : 25 26
Predicate_list       : 19 25
Program              : 0
Register_set         : 12 13 14 15 16 19
Statement            : 2 3
Statement_list       : 1 2
SuperType            : 4
Type                 : 6 8

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . Statement_list
    (2) Statement_list -> . Statement END Statement_list
    (3) Statement_list -> . Statement END
    (4) Statement -> . SuperType ID EQUAL Expression
    (5) Statement -> . ID EQUAL Expression
    (6) SuperType -> . TYPE LPAREN Type RPAREN
    (7) SuperType -> . ClusterSet
    (8) SuperType -> . Type
    (9) ClusterSet -> . TYPE LPAREN TYPE COMMA ClusterSet RPAREN
    (10) ClusterSet -> . TYPE LPAREN TYPE COMMA TYPE RPAREN
    (11) Type -> . TYPE

    ID              shift and go to state 5
    TYPE            shift and go to state 6

    Program                        shift and go to state 1
    Statement_list                 shift and go to state 2
    Statement                      shift and go to state 3
    SuperType                      shift and go to state 4
    Type                           shift and go to state 7
    ClusterSet                     shift and go to state 8

state 1

    (0) S' -> Program .



state 2

    (1) Program -> Statement_list .

    $end            reduce using rule 1 (Program -> Statement_list .)


state 3

    (2) Statement_list -> Statement . END Statement_list
    (3) Statement_list -> Statement . END

    END             shift and go to state 9


state 4

    (4) Statement -> SuperType . ID EQUAL Expression

    ID              shift and go to state 10


state 5

    (5) Statement -> ID . EQUAL Expression

    EQUAL           shift and go to state 11


state 6

    (6) SuperType -> TYPE . LPAREN Type RPAREN
    (9) ClusterSet -> TYPE . LPAREN TYPE COMMA ClusterSet RPAREN
    (10) ClusterSet -> TYPE . LPAREN TYPE COMMA TYPE RPAREN
    (11) Type -> TYPE .

    LPAREN          shift and go to state 12
    ID              reduce using rule 11 (Type -> TYPE .)


state 7

    (8) SuperType -> Type .

    ID              reduce using rule 8 (SuperType -> Type .)


state 8

    (7) SuperType -> ClusterSet .

    ID              reduce using rule 7 (SuperType -> ClusterSet .)


state 9

    (2) Statement_list -> Statement END . Statement_list
    (3) Statement_list -> Statement END .
    (2) Statement_list -> . Statement END Statement_list
    (3) Statement_list -> . Statement END
    (4) Statement -> . SuperType ID EQUAL Expression
    (5) Statement -> . ID EQUAL Expression
    (6) SuperType -> . TYPE LPAREN Type RPAREN
    (7) SuperType -> . ClusterSet
    (8) SuperType -> . Type
    (9) ClusterSet -> . TYPE LPAREN TYPE COMMA ClusterSet RPAREN
    (10) ClusterSet -> . TYPE LPAREN TYPE COMMA TYPE RPAREN
    (11) Type -> . TYPE

    $end            reduce using rule 3 (Statement_list -> Statement END .)
    ID              shift and go to state 5
    TYPE            shift and go to state 6

    Statement                      shift and go to state 3
    Statement_list                 shift and go to state 13
    SuperType                      shift and go to state 4
    Type                           shift and go to state 7
    ClusterSet                     shift and go to state 8

state 10

    (4) Statement -> SuperType ID . EQUAL Expression

    EQUAL           shift and go to state 14


state 11

    (5) Statement -> ID EQUAL . Expression
    (12) Expression -> . GROUP Register_set BY Collection_list
    (13) Expression -> . USER LPAREN Register_set RPAREN
    (14) Expression -> . TOWER LPAREN Register_set RPAREN
    (15) Expression -> . COUNT LPAREN Register_set RPAREN
    (16) Expression -> . Register_set
    (17) Register_set -> . ID
    (18) Register_set -> . ALL
    (19) Register_set -> . FILTER Register_set BY Predicate_list

    GROUP           shift and go to state 17
    USER            shift and go to state 19
    TOWER           shift and go to state 20
    COUNT           shift and go to state 21
    ID              shift and go to state 15
    ALL             shift and go to state 22
    FILTER          shift and go to state 23

    Expression                     shift and go to state 16
    Register_set                   shift and go to state 18

state 12

    (6) SuperType -> TYPE LPAREN . Type RPAREN
    (9) ClusterSet -> TYPE LPAREN . TYPE COMMA ClusterSet RPAREN
    (10) ClusterSet -> TYPE LPAREN . TYPE COMMA TYPE RPAREN
    (11) Type -> . TYPE

    TYPE            shift and go to state 24

    Type                           shift and go to state 25

state 13

    (2) Statement_list -> Statement END Statement_list .

    $end            reduce using rule 2 (Statement_list -> Statement END Statement_list .)


state 14

    (4) Statement -> SuperType ID EQUAL . Expression
    (12) Expression -> . GROUP Register_set BY Collection_list
    (13) Expression -> . USER LPAREN Register_set RPAREN
    (14) Expression -> . TOWER LPAREN Register_set RPAREN
    (15) Expression -> . COUNT LPAREN Register_set RPAREN
    (16) Expression -> . Register_set
    (17) Register_set -> . ID
    (18) Register_set -> . ALL
    (19) Register_set -> . FILTER Register_set BY Predicate_list

    GROUP           shift and go to state 17
    USER            shift and go to state 19
    TOWER           shift and go to state 20
    COUNT           shift and go to state 21
    ID              shift and go to state 15
    ALL             shift and go to state 22
    FILTER          shift and go to state 23

    Expression                     shift and go to state 26
    Register_set                   shift and go to state 18

state 15

    (17) Register_set -> ID .

    END             reduce using rule 17 (Register_set -> ID .)
    BY              reduce using rule 17 (Register_set -> ID .)
    RPAREN          reduce using rule 17 (Register_set -> ID .)


state 16

    (5) Statement -> ID EQUAL Expression .

    END             reduce using rule 5 (Statement -> ID EQUAL Expression .)


state 17

    (12) Expression -> GROUP . Register_set BY Collection_list
    (17) Register_set -> . ID
    (18) Register_set -> . ALL
    (19) Register_set -> . FILTER Register_set BY Predicate_list

    ID              shift and go to state 15
    ALL             shift and go to state 22
    FILTER          shift and go to state 23

    Register_set                   shift and go to state 27

state 18

    (16) Expression -> Register_set .

    END             reduce using rule 16 (Expression -> Register_set .)


state 19

    (13) Expression -> USER . LPAREN Register_set RPAREN

    LPAREN          shift and go to state 28


state 20

    (14) Expression -> TOWER . LPAREN Register_set RPAREN

    LPAREN          shift and go to state 29


state 21

    (15) Expression -> COUNT . LPAREN Register_set RPAREN

    LPAREN          shift and go to state 30


state 22

    (18) Register_set -> ALL .

    END             reduce using rule 18 (Register_set -> ALL .)
    BY              reduce using rule 18 (Register_set -> ALL .)
    RPAREN          reduce using rule 18 (Register_set -> ALL .)


state 23

    (19) Register_set -> FILTER . Register_set BY Predicate_list
    (17) Register_set -> . ID
    (18) Register_set -> . ALL
    (19) Register_set -> . FILTER Register_set BY Predicate_list

    ID              shift and go to state 15
    ALL             shift and go to state 22
    FILTER          shift and go to state 23

    Register_set                   shift and go to state 31

state 24

    (9) ClusterSet -> TYPE LPAREN TYPE . COMMA ClusterSet RPAREN
    (10) ClusterSet -> TYPE LPAREN TYPE . COMMA TYPE RPAREN
    (11) Type -> TYPE .

    COMMA           shift and go to state 32
    RPAREN          reduce using rule 11 (Type -> TYPE .)


state 25

    (6) SuperType -> TYPE LPAREN Type . RPAREN

    RPAREN          shift and go to state 33


state 26

    (4) Statement -> SuperType ID EQUAL Expression .

    END             reduce using rule 4 (Statement -> SuperType ID EQUAL Expression .)


state 27

    (12) Expression -> GROUP Register_set . BY Collection_list

    BY              shift and go to state 34


state 28

    (13) Expression -> USER LPAREN . Register_set RPAREN
    (17) Register_set -> . ID
    (18) Register_set -> . ALL
    (19) Register_set -> . FILTER Register_set BY Predicate_list

    ID              shift and go to state 15
    ALL             shift and go to state 22
    FILTER          shift and go to state 23

    Register_set                   shift and go to state 35

state 29

    (14) Expression -> TOWER LPAREN . Register_set RPAREN
    (17) Register_set -> . ID
    (18) Register_set -> . ALL
    (19) Register_set -> . FILTER Register_set BY Predicate_list

    ID              shift and go to state 15
    ALL             shift and go to state 22
    FILTER          shift and go to state 23

    Register_set                   shift and go to state 36

state 30

    (15) Expression -> COUNT LPAREN . Register_set RPAREN
    (17) Register_set -> . ID
    (18) Register_set -> . ALL
    (19) Register_set -> . FILTER Register_set BY Predicate_list

    ID              shift and go to state 15
    ALL             shift and go to state 22
    FILTER          shift and go to state 23

    Register_set                   shift and go to state 37

state 31

    (19) Register_set -> FILTER Register_set . BY Predicate_list

    BY              shift and go to state 38


state 32

    (9) ClusterSet -> TYPE LPAREN TYPE COMMA . ClusterSet RPAREN
    (10) ClusterSet -> TYPE LPAREN TYPE COMMA . TYPE RPAREN
    (9) ClusterSet -> . TYPE LPAREN TYPE COMMA ClusterSet RPAREN
    (10) ClusterSet -> . TYPE LPAREN TYPE COMMA TYPE RPAREN

    TYPE            shift and go to state 39

    ClusterSet                     shift and go to state 40

state 33

    (6) SuperType -> TYPE LPAREN Type RPAREN .

    ID              reduce using rule 6 (SuperType -> TYPE LPAREN Type RPAREN .)


state 34

    (12) Expression -> GROUP Register_set BY . Collection_list
    (20) Collection_list -> . Collection COMMA Collection_list
    (21) Collection_list -> . Collection
    (22) Collection -> . ID
    (23) Collection -> . LBRACE PROV RBRACE
    (24) Collection -> . LBRACE MUN RBRACE

    ID              shift and go to state 43
    LBRACE          shift and go to state 44

    Collection_list                shift and go to state 41
    Collection                     shift and go to state 42

state 35

    (13) Expression -> USER LPAREN Register_set . RPAREN

    RPAREN          shift and go to state 45


state 36

    (14) Expression -> TOWER LPAREN Register_set . RPAREN

    RPAREN          shift and go to state 46


state 37

    (15) Expression -> COUNT LPAREN Register_set . RPAREN

    RPAREN          shift and go to state 47


state 38

    (19) Register_set -> FILTER Register_set BY . Predicate_list
    (25) Predicate_list -> . Predicate COMMA Predicate_list
    (26) Predicate_list -> . Predicate
    (27) Predicate -> . TIME LPAREN DATE COMMA DATE RPAREN
    (28) Predicate -> . LOCATION LPAREN STRING RPAREN
    (29) Predicate -> . ID

    TIME            shift and go to state 50
    LOCATION        shift and go to state 51
    ID              shift and go to state 52

    Predicate_list                 shift and go to state 48
    Predicate                      shift and go to state 49

state 39

    (10) ClusterSet -> TYPE LPAREN TYPE COMMA TYPE . RPAREN
    (9) ClusterSet -> TYPE . LPAREN TYPE COMMA ClusterSet RPAREN
    (10) ClusterSet -> TYPE . LPAREN TYPE COMMA TYPE RPAREN

    RPAREN          shift and go to state 54
    LPAREN          shift and go to state 53


state 40

    (9) ClusterSet -> TYPE LPAREN TYPE COMMA ClusterSet . RPAREN

    RPAREN          shift and go to state 55


state 41

    (12) Expression -> GROUP Register_set BY Collection_list .

    END             reduce using rule 12 (Expression -> GROUP Register_set BY Collection_list .)


state 42

    (20) Collection_list -> Collection . COMMA Collection_list
    (21) Collection_list -> Collection .

    COMMA           shift and go to state 56
    END             reduce using rule 21 (Collection_list -> Collection .)


state 43

    (22) Collection -> ID .

    COMMA           reduce using rule 22 (Collection -> ID .)
    END             reduce using rule 22 (Collection -> ID .)


state 44

    (23) Collection -> LBRACE . PROV RBRACE
    (24) Collection -> LBRACE . MUN RBRACE

    PROV            shift and go to state 57
    MUN             shift and go to state 58


state 45

    (13) Expression -> USER LPAREN Register_set RPAREN .

    END             reduce using rule 13 (Expression -> USER LPAREN Register_set RPAREN .)


state 46

    (14) Expression -> TOWER LPAREN Register_set RPAREN .

    END             reduce using rule 14 (Expression -> TOWER LPAREN Register_set RPAREN .)


state 47

    (15) Expression -> COUNT LPAREN Register_set RPAREN .

    END             reduce using rule 15 (Expression -> COUNT LPAREN Register_set RPAREN .)


state 48

    (19) Register_set -> FILTER Register_set BY Predicate_list .

    END             reduce using rule 19 (Register_set -> FILTER Register_set BY Predicate_list .)
    BY              reduce using rule 19 (Register_set -> FILTER Register_set BY Predicate_list .)
    RPAREN          reduce using rule 19 (Register_set -> FILTER Register_set BY Predicate_list .)


state 49

    (25) Predicate_list -> Predicate . COMMA Predicate_list
    (26) Predicate_list -> Predicate .

    COMMA           shift and go to state 59
    END             reduce using rule 26 (Predicate_list -> Predicate .)
    BY              reduce using rule 26 (Predicate_list -> Predicate .)
    RPAREN          reduce using rule 26 (Predicate_list -> Predicate .)


state 50

    (27) Predicate -> TIME . LPAREN DATE COMMA DATE RPAREN

    LPAREN          shift and go to state 60


state 51

    (28) Predicate -> LOCATION . LPAREN STRING RPAREN

    LPAREN          shift and go to state 61


state 52

    (29) Predicate -> ID .

    COMMA           reduce using rule 29 (Predicate -> ID .)
    END             reduce using rule 29 (Predicate -> ID .)
    BY              reduce using rule 29 (Predicate -> ID .)
    RPAREN          reduce using rule 29 (Predicate -> ID .)


state 53

    (9) ClusterSet -> TYPE LPAREN . TYPE COMMA ClusterSet RPAREN
    (10) ClusterSet -> TYPE LPAREN . TYPE COMMA TYPE RPAREN

    TYPE            shift and go to state 62


state 54

    (10) ClusterSet -> TYPE LPAREN TYPE COMMA TYPE RPAREN .

    ID              reduce using rule 10 (ClusterSet -> TYPE LPAREN TYPE COMMA TYPE RPAREN .)
    RPAREN          reduce using rule 10 (ClusterSet -> TYPE LPAREN TYPE COMMA TYPE RPAREN .)


state 55

    (9) ClusterSet -> TYPE LPAREN TYPE COMMA ClusterSet RPAREN .

    ID              reduce using rule 9 (ClusterSet -> TYPE LPAREN TYPE COMMA ClusterSet RPAREN .)
    RPAREN          reduce using rule 9 (ClusterSet -> TYPE LPAREN TYPE COMMA ClusterSet RPAREN .)


state 56

    (20) Collection_list -> Collection COMMA . Collection_list
    (20) Collection_list -> . Collection COMMA Collection_list
    (21) Collection_list -> . Collection
    (22) Collection -> . ID
    (23) Collection -> . LBRACE PROV RBRACE
    (24) Collection -> . LBRACE MUN RBRACE

    ID              shift and go to state 43
    LBRACE          shift and go to state 44

    Collection                     shift and go to state 42
    Collection_list                shift and go to state 63

state 57

    (23) Collection -> LBRACE PROV . RBRACE

    RBRACE          shift and go to state 64


state 58

    (24) Collection -> LBRACE MUN . RBRACE

    RBRACE          shift and go to state 65


state 59

    (25) Predicate_list -> Predicate COMMA . Predicate_list
    (25) Predicate_list -> . Predicate COMMA Predicate_list
    (26) Predicate_list -> . Predicate
    (27) Predicate -> . TIME LPAREN DATE COMMA DATE RPAREN
    (28) Predicate -> . LOCATION LPAREN STRING RPAREN
    (29) Predicate -> . ID

    TIME            shift and go to state 50
    LOCATION        shift and go to state 51
    ID              shift and go to state 52

    Predicate                      shift and go to state 49
    Predicate_list                 shift and go to state 66

state 60

    (27) Predicate -> TIME LPAREN . DATE COMMA DATE RPAREN

    DATE            shift and go to state 67


state 61

    (28) Predicate -> LOCATION LPAREN . STRING RPAREN

    STRING          shift and go to state 68


state 62

    (9) ClusterSet -> TYPE LPAREN TYPE . COMMA ClusterSet RPAREN
    (10) ClusterSet -> TYPE LPAREN TYPE . COMMA TYPE RPAREN

    COMMA           shift and go to state 32


state 63

    (20) Collection_list -> Collection COMMA Collection_list .

    END             reduce using rule 20 (Collection_list -> Collection COMMA Collection_list .)


state 64

    (23) Collection -> LBRACE PROV RBRACE .

    COMMA           reduce using rule 23 (Collection -> LBRACE PROV RBRACE .)
    END             reduce using rule 23 (Collection -> LBRACE PROV RBRACE .)


state 65

    (24) Collection -> LBRACE MUN RBRACE .

    COMMA           reduce using rule 24 (Collection -> LBRACE MUN RBRACE .)
    END             reduce using rule 24 (Collection -> LBRACE MUN RBRACE .)


state 66

    (25) Predicate_list -> Predicate COMMA Predicate_list .

    END             reduce using rule 25 (Predicate_list -> Predicate COMMA Predicate_list .)
    BY              reduce using rule 25 (Predicate_list -> Predicate COMMA Predicate_list .)
    RPAREN          reduce using rule 25 (Predicate_list -> Predicate COMMA Predicate_list .)


state 67

    (27) Predicate -> TIME LPAREN DATE . COMMA DATE RPAREN

    COMMA           shift and go to state 69


state 68

    (28) Predicate -> LOCATION LPAREN STRING . RPAREN

    RPAREN          shift and go to state 70


state 69

    (27) Predicate -> TIME LPAREN DATE COMMA . DATE RPAREN

    DATE            shift and go to state 71


state 70

    (28) Predicate -> LOCATION LPAREN STRING RPAREN .

    COMMA           reduce using rule 28 (Predicate -> LOCATION LPAREN STRING RPAREN .)
    END             reduce using rule 28 (Predicate -> LOCATION LPAREN STRING RPAREN .)
    BY              reduce using rule 28 (Predicate -> LOCATION LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 28 (Predicate -> LOCATION LPAREN STRING RPAREN .)


state 71

    (27) Predicate -> TIME LPAREN DATE COMMA DATE . RPAREN

    RPAREN          shift and go to state 72


state 72

    (27) Predicate -> TIME LPAREN DATE COMMA DATE RPAREN .

    COMMA           reduce using rule 27 (Predicate -> TIME LPAREN DATE COMMA DATE RPAREN .)
    END             reduce using rule 27 (Predicate -> TIME LPAREN DATE COMMA DATE RPAREN .)
    BY              reduce using rule 27 (Predicate -> TIME LPAREN DATE COMMA DATE RPAREN .)
    RPAREN          reduce using rule 27 (Predicate -> TIME LPAREN DATE COMMA DATE RPAREN .)

